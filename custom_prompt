#!/bin/bash

# Foreground colors
        BLACK="\[\033[0;30m\]"
          RED="\[\033[0;31m\]"
        GREEN="\[\033[0;32m\]"
       YELLOW="\[\033[0;33m\]"
         BLUE="\[\033[0;34m\]"
      MAGENTA="\[\033[0;35m\]"
         CYAN="\[\033[0;36m\]"
   LIGHT_GRAY="\[\033[0;37m\]"
    DARK_GRAY="\[\033[0;90m\]"
    LIGHT_RED="\[\033[0;91m\]"
  LIGHT_GREEN="\[\033[0;92m\]"
 LIGHT_YELLOW="\[\033[0;93m\]"
   LIGHT_BLUE="\[\033[0;94m\]"
LIGHT_MAGENTA="\[\033[0;95m\]"
   LIGHT_CYAN="\[\033[0;96m\]"
        WHITE="\[\033[0;97m\]"
         BOLD="\[\e[1m\]"
          DIM="\[\e[2m\]"
   UNDERLINED="\[\e[4m\]"
        BLINK="\[\e[5m\]"
      REVERSE="\[\e[7m\]"
    RESET_ALL="\[\e[0m\]"

# Git prompt attributes
function parse_git_branch {
    alias git='LANG=en_US.UTF-8 git'
    git rev-parse --git_dir &> /dev/null
    git_status="$(git status 2> /dev/null)"

    # Modification state
    modif_pattern="working tree clean"
    if [[ ! ${git_status}} =~ ${modif_pattern} ]]; then
        state="${RED}*"
    fi

    # Remote state
    remote_pattern="Your branch is (.*) of"
    if [[ ${git_status} =~ ${remote_pattern} ]]; then
        if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
            remote="${YELLOW}↑"
        else
            remote="${YELLOW}↓"
        fi
    fi

    # Diverge state
    diverge_pattern="Your branch and (.*) have diverged"
    if [[ ${git_status} =~ ${diverge_pattern} ]]; then
        remote="${YELLOW}↕"
    fi

    # Git directory
    branch_pattern="^On branch ([^${IFS}]*)"
    if [[ ${git_status} =~ ${branch_pattern} ]]; then
        branch="${BASH_REMATCH[1]}"
        echo " (${branch})${remote}${state}"
    fi
}

# Main prompt function
function prompt_func() {
    previous_return_value=$?;
    prompt="${LIGHT_GRAY}(\u)[${LIGHT_BLUE}\W${GREEN}$(parse_git_branch)${LIGHT_GRAY}]${RESET_ALL}"

    if test $previous_return_value -eq 0
    then
        PS1="${prompt}> "
    else
        PS1="${prompt}${LIGHT_BLUE}>${RESET_ALL} "
    fi
}

PROMPT_COMMAND=prompt_func
